defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 3000
    runAsGroup: 3000
    fsGroup: 3000
    fsGroupChangePolicy: OnRootMismatch
    seccompProfile: { type: RuntimeDefault }

controllers:
  semaphore:
    annotations:
      reloader.stakater.com/auto: "true"
    initContainers:
      init-db:
        image:
          repository: ghcr.io/home-operations/postgres-init
          tag: 17.5
          pullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: semaphore-secret
    containers:
      app:
        image:
          repository: semaphoreui/semaphore
          tag: v2.15.5@sha256:b4ec6f484ee3ea05bf4ea031c491e9403a88a1782213c8062d85b2b91672ed93
        env:
          SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
          SEMAPHORE_PORT: &port 3000
          SEMAPHORE_DB_DIALECT: postgres
          SEMAPHORE_DB_PORT: "5432"
        envFrom: *envFrom
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities: { drop: ["ALL"] }

service:
  app:
    controller: semaphore
    ports:
      http:
        port: *port

ingress:
  app:
    enabled: true
    className: internal
    hosts:
      - host: semaphore.laboratory.casa
        paths:
          - path: /
            service:
              identifier: app
              port: http

persistence:
  data:
    type: persistentVolumeClaim
    storageClass: longhorn
    accessMode: ReadWriteOnce
    suffix: data
    size: 512Mi
    globalMounts:
      - path: /var/lib/semaphore
        subPath: data
      - path: /etc/semaphore
        subPath: config
  tmp:
    type: emptyDir
    globalMounts:
      - path: /tmp/semaphore
