---
log:
  level: warn
# Take from https://github.com/lldap/lldap/blob/main/example_configs/authelia_config.yml
authentication_backend:
  # Password reset through authelia works normally.
  password_reset:
    disable: false
  # How often authelia should check if there is a user update in LDAP
  refresh_interval: 1m
  ldap:
    implementation: lldap
    # Pattern is ldap://HOSTNAME-OR-IP:PORT
    # Normal ldap port is 389, standard in LLDAP is 3890
    address: ldap://lldap.security.svc.cluster.local:389
    # Set base dn that you configured in LLDAP
    base_dn: dc=laboratory,dc=casa
    # The username and password of the bind user.
    # "bind_user" should be the username you created for authentication with the "lldap_strict_readonly" permission. It is not recommended to use an actual admin account here.
    # If you are configuring Authelia to change user passwords, then the account used here needs the "lldap_password_manager" permission instead.
    user: uid=authelia,ou=people,dc=laboratory,dc=casa
    # Password can also be set using a secret: https://www.authelia.com/configuration/methods/secrets/
    # password: PUT-IN-SECRET

# Adapted from https://docs.ibracorp.io/authelia/configuration-files/configuration.yml
access_control:
  default_policy: deny
  rules:
    ## bypasses for logging in
    - domain:
        - "login.laboratory.casa"
        - "auth.laboratory.casa"
        - "login.biglink.party"
      policy: bypass
    ## Open up shlink for non-admins
    - domain:
        - "app.biglink.party"
      policy: one_factor
      subject:
        - group:apps_user
    ## Allow everything for admins
    - domain:
        - "*.laboratory.casa"
        - "*.biglink.party"
      policy: one_factor
      subject:
        - group:apps_admin
session:
  name: authelia_session
  same_site: lax
  expiration: 1h
  inactivity: 30m
  remember_me: 1M
  cookies:
    - domain: laboratory.casa
      authelia_url: https://login.laboratory.casa
      default_redirection_url: https://login.laboratory.casa/
    - domain: biglink.party
      authelia_url: https://login.biglink.party
      default_redirection_url: https://login.biglink.party/
  redis:
    host: valkey.valkey.svc.cluster.local
    port: 6379
    database_index: 3
    maximum_active_connections: 8
    minimum_idle_connections: 0

regulation:
  max_retries: 3
  find_time: 10m
  ban_time: 12h

notifier:
  disable_startup_check: false
  smtp:
    identifier: localhost
    subject: "[Authelia] {title}"
    startup_check_address: test@laboratory.casa
    disable_require_tls: false
    disable_html_emails: false
    tls:
      skip_verify: false
      minimum_version: TLS1.2

# Disable some stuff for now
totp:
  disable: false
  issuer: authelia.com
webauthn:
  disable: true
duo_api:
  disable: true

# OIDC
identity_providers:
  oidc:
    claims_policies:
      all:
        id_token:
          [
            "groups",
            "email",
            "email_verified",
            "alt_emails",
            "preferred_username",
            "name",
          ]
    jwks:
      # https://www.authelia.com/reference/guides/generating-secure-values/#generating-an-rsa-keypair
      # openssl genrsa -out authelia_oidc_private_key.pem 2048
      # openssl rsa -in authelia_oidc_private_key.pem -outform PEM -pubout -out authelia_oidc_public_key.pem
      # And then store the private key in the secret and mount to the pod
      # prettier-ignore
      - key: {{ secret "/config/secrets/oidc/jwks/authelia_oidc_private_key.pem" | mindent 10 "|" | msquote }}
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
      allowed_origins_from_client_redirect_uris: true
    # client_id: docker run --rm authelia/authelia:latest authelia crypto rand --length 72 --charset rfc3986
    # client_secret: docker run --rm authelia/authelia:latest authelia crypto hash generate pbkdf2 --variant sha512 --random --random.length 72 --random.charset rfc3986
    clients:
      # Argo CD
      - client_id: "By4sXGwiayM7NNeMvTuYMPFOJatVapIBtK8rdnFF1FTexB6oh0Xv_jUCkeEw9L8s~EP3bT7s"
        client_name: "Argo CD"
        client_secret: "$pbkdf2-sha512$310000$i4Ya6f5hnMVkT1K9goEDMw$SmXN5XUB3yVY5n7UTXA15lcI0yWDuhZSn6y6jUC3UAZZY6MnTRje/Gr352voZL7P5202.Yj5ieLiLC1RfXuZIw"
        public: false
        authorization_policy: "one_factor"
        consent_mode: "implicit"
        require_pkce: false
        redirect_uris:
          - "https://argo.laboratory.casa/auth/callback"
        scopes:
          - "email"
          - "groups"
          - "openid"
          - "profile"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_basic"
      # Home Assistant
      - client_id: "SWm7hj4WCxjlpcDcuGq24Fs3kt14YgES_tmXLzfN7IUq7Yo5geag.2NewaRVB-cMCfBV2MlQ"
        client_name: "Home Assistant"
        client_secret: "$pbkdf2-sha512$310000$F07F3crL5QymStERExCd7w$6VZNPA44xZgJwrX6LKN/Mw5lzNuV3z81p2DA1nozvLKFyGnEoS62EkN9MfN59LEPUBwlokuz4UAi6G8RhMKY1w"
        public: false
        require_pkce: true
        pkce_challenge_method: "S256"
        authorization_policy: "one_factor"
        consent_mode: "implicit"
        redirect_uris:
          - "https://ha.laboratory.casa/auth/oidc/callback"
        scopes:
          - "openid"
          - "profile"
          - "groups"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_post"
      # Immich
      - client_id: "41nHQ5imgM1h3nOJL8FfXvggecdeXrGkhnLHyyTp3S1ucf0H-PzO3NNcVDY6yyXEtNOfHWZs"
        client_name: "Immich"
        client_secret: "$pbkdf2-sha512$310000$L8d/Waz0mSe94FCHULvOkg$c2TUcXjKETw/tjugKN7XfzysfCE5548s/wiLo1ayoQRojR3PWVdguwhlsW4eozujdzViFM5Hg9UFJWz7uYzh3A"
        public: false
        authorization_policy: "one_factor"
        consent_mode: "implicit"
        redirect_uris:
          - "https://photos.laboratory.casa/auth/login"
          - "https://photos.laboratory.casa/user-settings"
          - "app.immich:///oauth-callback"
        scopes:
          - "openid"
          - "profile"
          - "email"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_post"
      # Grafana
      - client_id: "GsZwRm8rK2QfEtcJFCeIm1Y7M5Vb4JhLlYKp-od5xDjiSkIQ3ySB1NpZrcmEK2pJtwboW9et"
        client_name: "Grafana"
        client_secret: "$pbkdf2-sha512$310000$2vOKyoOWcrZLKvJ4v/t8qQ$LP5DSdgiorcOExz4EuCFsFAR2RCgvMaJ7mIJkTkoXAxbMQ0B2QvKRViQ48yRC/eboOPjGjuUzaqkUr/kNQkVWg"
        public: false
        authorization_policy: "one_factor"
        require_pkce: true
        pkce_challenge_method: "S256"
        redirect_uris:
          - "https://graf.laboratory.casa/login/generic_oauth"
        scopes:
          - "openid"
          - "profile"
          - "groups"
          - "email"
        response_types:
          - "code"
        grant_types:
          - "authorization_code"
        access_token_signed_response_alg: "none"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_basic"
      # Romm
      - client_id: ".VBSb-hcpa9r3odp1o~1VreQRYpwUWpb1Dzw5dDkEcr08duvBx2TZ6tAIO-gFJ92q2rPZ-Y8"
        client_name: "Romm"
        client_secret: "$pbkdf2-sha512$310000$qdx8gSyPI1fZyRXaDLTHtg$Um9tnhj7NGSviNGxy4WGbXNw8x8tX.Z.WQCrLltfz7NOTzcQHJIBKdmSxGlk3.AwJN.2ghy2y2bAAYHAPmc1sg"
        claims_policy: "all"
        public: false
        authorization_policy: "one_factor"
        grant_types:
          - authorization_code
        redirect_uris:
          - "https://romm.laboratory.casa/api/oauth/openid"
        scopes:
          - "openid"
          - "email"
          - "profile"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_basic"
