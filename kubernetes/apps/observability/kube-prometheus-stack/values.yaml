crds:
  enabled: false
cleanPrometheusOperatorObjectNames: true
kubeScheduler:
  service:
    selector:
      k8s-app: kube-scheduler
kubeControllerManager: &kubeControllerManager
  service:
    selector:
      k8s-app: kube-controller-manager
kubeEtcd:
  <<: *kubeControllerManager
kubeProxy:
  enabled: false
prometheus-node-exporter:
  fullnameOverride: node-exporter
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: kubernetes_node
kube-state-metrics:
  fullnameOverride: kube-state-metrics
  metricLabelsAllowlist:
    - pods=[*]
    - deployments=[*]
    - persistentvolumeclaims=[*]
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: kubernetes_node
grafana:
  enabled: false
  forceDeployDashboards: false
alertmanager:
  ingress:
    enabled: true
    ingressClassName: internal
    hosts: ["alertmanager.laboratory.casa"]
  alertmanagerSpec:
    alertmanagerConfiguration:
      name: alertmanager
      global:
        resolveTimeout: 5m
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn-single-replica
          resources:
            requests:
              storage: 1Gi
prometheus:
  ingress:
    enabled: true
    ingressClassName: internal
    pathType: Prefix
    hosts: ["prometheus.laboratory.casa"]
  prometheusSpec:
    replicas: 1
    replicaExternalLabelName: "__replica__"
    scrapeInterval: 30s
    podAntiAffinity: hard
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    enableAdminAPI: true
    walCompression: true
    enabledFeatures:
      - memory-snapshot-on-shutdown
    retention: 2d
    retentionSize: 6GB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn-single-replica
          resources:
            requests:
              storage: 10Gi
    thanos:
      image: quay.io/thanos/thanos:v0.39.2
      objectStorageConfig:
        existingSecret:
          name: thanos-objectstore-secret
          key: objstore.yml
  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true
